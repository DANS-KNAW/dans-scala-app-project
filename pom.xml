<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2018 DANS - Data Archiving and Networked Services (info@dans.knaw.nl)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>nl.knaw.dans.shared</groupId>
        <artifactId>dans-scala-project</artifactId>
        <version>4.0.0</version>
        <relativePath>../dans-scala-project</relativePath>
    </parent>

    <artifactId>dans-scala-app-project</artifactId>
    <version>4.0.0</version>
    <name>DANS Scala Application Project</name>
    <packaging>pom</packaging>
    <properties>
        <lib-snapshot-repository>http://maven-repo.dans.knaw.nl/repository/maven-snapshots</lib-snapshot-repository>
        <lib-release-repository>http://maven-repo.dans.knaw.nl/repository/maven-releases</lib-release-repository>
        <lib-snapshot-repository-test>http://dnexus.dans.knaw.nl/repository/maven-snapshots</lib-snapshot-repository-test>
        <lib-release-repository-test>http://dnexus.dans.knaw.nl/repository/maven-releases</lib-release-repository-test>
        <is-rpm-project>false</is-rpm-project>
    </properties>
    <scm>
        <developerConnection>scm:git:https://github.com/DANS-KNAW/${project.artifactId}</developerConnection>
        <tag>HEAD</tag>
    </scm>
    <repositories>
        <repository>
            <id>DANS</id>
            <releases>
                <enabled>true</enabled>
            </releases>
            <url>http://maven.dans.knaw.nl/</url>
        </repository>
    </repositories>
    <build>
        <resources>
            <resource>
                <directory>src/main/assembly/dist/bin</directory>
                <targetPath>${project.build.directory}/version</targetPath>
                <includes>
                    <include>version</include>
                </includes>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <!--
                    This creates a new property rpm-repository-url and sets it either to the snapshot or release repository
                    based on the project version containing the word SNAPSHOT or not.
                -->
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>find-is-snapshot</id>
                        <phase>validate</phase>
                        <configuration>
                            <exportAntProperties>true</exportAntProperties>
                            <target>
                                <condition property="isSnapshot">
                                    <contains string="${project.version}" substring="SNAPSHOT" />
                                </condition>
                                <condition property="rpm-repository-url"
                                           value="${project.distributionManagement.snapshotRepository.url}">
                                    <isset property="isSnapshot" />
                                </condition>
                                <property name="rpm-repository-url"
                                          value="${project.distributionManagement.repository.url}" />
                                <condition property="skip-exec"
                                           value="false" >
                                    <equals arg1="${is-rpm-project}" arg2="true" />
                                </condition>
                                <condition property="skip-deploy"
                                           value="true" >
                                    <equals arg1="${is-rpm-project}" arg2="true" />
                                </condition>
                                <property name="skip-exec" value="true" />
                                <property name="skip-deploy" value="false" />
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- The inherited exec-maven-plugin config deploys to the YUM repo
                 We suppress that here -->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>${exec-maven-plugin.version}</version>
                <configuration>
                    <skip>${skip-exec}</skip>
                </configuration>
            </plugin>
            <plugin>
                <!-- The parent POM suppresses the default deploy. We reactivate that here. -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>${maven-deploy-plugin.version}</version>
                <configuration>
                    <skip>${skip-deploy}</skip>
                </configuration>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>rpm-maven-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>attach-rpm</id>
                            <goals>
                                <goal>attached-rpm</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <!--
                    This will call a python script included in dans-mvn-build-resources. The python script will
                    deploy the RPM using the Nexus REST API for Yum repositories. It will also double check
                    that that RPM is a snapshot.

                    NOTE: The Nexus Credentials must available in the environment variables NEXUS_USER and NEXUS_PASSWORD!!
                    (I could find no easy way to read the credentials from ~/.m2/settings.xml, where they are also provided,
                    for the maven-deploy-plugin)
                    -->
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>${exec-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <phase>deploy</phase>
                            <goals>
                                <goal>exec</goal>
                            </goals>
                            <configuration>
                                <executable>python</executable>
                                <workingDirectory>${project.basedir}</workingDirectory>
                                <arguments>
                                    <argument>${project.build.directory}/dans-build-resources/script/deploy-rpm.py</argument>
                                    <argument>${env.NEXUS_USER}</argument>
                                    <argument>${env.NEXUS_PASSWORD}</argument>
                                    <argument>${rpm-repository-url}</argument>
                                    <argument>${project.build.directory}</argument>
                                </arguments>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
